# Generated by Django 5.2.5 on 2025-08-31 13:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ListSense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('sense', models.TextField(blank=True, null=True)),
                ('exam', models.TextField(blank=True, null=True)),
                ('wseq', models.IntegerField(default=0)),
                ('wrkd', models.IntegerField(default=0, help_text='Corresponds to type_sense.id in the original schema')),
                ('dated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'list_sense',
                'ordering': ['wseq'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('equivalent', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'list_word',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapAntonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'map_antonym',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapDerived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wrig', models.IntegerField(default=0, help_text='Irregular flag')),
            ],
            options={
                'db_table': 'map_derived',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapSimilar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'map_similar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapThesaurus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'map_thesaurus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeDerived',
            fields=[
                ('derived_type', models.AutoField(primary_key=True, serialize=False)),
                ('derivation', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'type_derived',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeWord',
            fields=[
                ('word_type', models.IntegerField(db_column='word_type', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='name', max_length=50, null=True)),
                ('shortname', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'type_word',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('show_in_menu', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.post')),
            ],
        ),
    ]
