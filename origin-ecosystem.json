{
  "apps": [
    {
      "name": "<APP_NAME>",
      "script": "./serve.js",
      "watch": false,
      "ignore_watch": [
        "[\\/\\\\]\\./",
        "node_modules"
      ],
      "error_file": "./logs/pm2-err.log",
      "out_file": "./logs/pm2-out.log",
      "-instances": 1,
      "-exec_mode": "cluster",
      "autorestart": true,
      "max_memory_restart": "700M",
      "env": {
        "NODE_ENV": "production"
      },
      "env_production": {
        "NODE_ENV": "production"
      },
      "env_development": {
        "NODE_ENV": "development"
      },
      "cwd": "./",
      "cwd-": "<APP_ROOT>",
      "args": ""
    }
  ],
  "deploy": {
    "production": {
      "user": "<SSH_USER>",
      "host": "<SSH_HOST>",
      "ref": "origin/master",
      "repo": "<APP_REPO>",
      "fetch": "all",
      "path": "<APP_ROOT>-git",
      "pre-deploy": "",
      "post-deploy": "",
      "pre-setup": "",
      "post-setup": "ln -s <APP_ROOT>-git/current <APP_ROOT>",
      "pre-deploy-local": ""
    }
  },
  "help": {
    "define": {
      "APP_NAME": "Application name used by pm2",
      "APP_ROOT": "Application root, which is symbolic link",
      "APP_REPO": "Repository git",
      "SSH_USER": "SSH user",
      "SSH_HOST": "SSH host"
    },
    "post-deploy": {
      "desc": "Execute command after git:ref.fetch",
      "eg": "npm install && npm run build && pm2 reload ecosystem.json --env production"
    },
    "^env_*$": "Specify environment variables to be injected when using --env",
    "deploy.production.setup": "pm2 deploy ecosystem.json production setup",
    "deploy.production.update": "pm2 deploy ecosystem.json production",
    "deploy.development.local": "pm2 start ecosystem.json --env development"
  }
}